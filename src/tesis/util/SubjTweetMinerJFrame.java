/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TweetMinerJFrame.java
 *
 * Created on 02/11/2010, 20:47:32
 */

package tesis.util;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import tesis.subjectivityClassification.classifiers.SubjectivityClassifier;
import tesis.subjectivityClassification.exceptions.PropertyKeyNotFoundException;
import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Tweet;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;

/**
 *
 * @author César García Pécora
 */
public class SubjTweetMinerJFrame extends javax.swing.JFrame {
    SubjectivityClassifier subjectivityClassifier;

    /** Creates new form TweetMinerJFrame */
    public SubjTweetMinerJFrame() {
        initComponents();
        subjectivityClassifier = new SubjectivityClassifier();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        tweetsList.setModel(new DefaultListModel());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTermTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tweetsList = new javax.swing.JList();
        subjButton = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        objButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Subjectivity Algorithm File Generator");

        searchTermTextField.setText("Search");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tweetsList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tweetsListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tweetsList);

        subjButton.setText("Subj");
        subjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjButtonActionPerformed(evt);
            }
        });

        jTextField2.setText("Max");

        objButton.setText("Obj");
        objButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(subjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(objButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchTermTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 430, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTermTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(subjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(objButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultListModel listModel = new DefaultListModel();
        tweetsList.setModel(listModel);
        String searchTerm = searchTermTextField.getText();
        int maxResult;
        String sentence;
        try{
            maxResult = Integer.parseInt(jTextField2.getText());
            if (!searchTerm.isEmpty()){
                if (maxResult > 0){                    
                    twitter4j.Twitter twitter = new TwitterFactory().getInstance();
                    Query query = new Query(searchTerm);
                    query.setLang("en");
                    int tweetsWanted = Integer.parseInt(jTextField2.getText());
                    int pages = tweetsWanted / 100;
                    if (pages == 0)
                        pages = 1;
                    query.setRpp(100);
                    for (int i=1; i<=pages; i++){
                        query.setPage(i);
                        QueryResult result = twitter.search(query);
                        for (Tweet status : result.getTweets()) {
                            //if (subjectivityClassifier.isSubjective(status.getText())){
                                sentence = status.getText();
                                listModel.addElement(sentence);
                            //}
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "MaxResult should be more than Zero", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Please, fill the Search field", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (TwitterException ex) {
            JOptionPane.showMessageDialog(null, "Twitter API Error", "Error", JOptionPane.INFORMATION_MESSAGE);
        }catch(NumberFormatException exception){
            JOptionPane.showMessageDialog(null, "Invalid Number Format of Max Search", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void subjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjButtonActionPerformed
        
        String text = this.getTextToAppend();
        try {
            this.appendToFile(Config.getSubjMinedTweetsFilePath(), text);
        } catch (PropertyKeyNotFoundException ex) {
            Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_subjButtonActionPerformed

    private void objButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objButtonActionPerformed

        String text = this.getTextToAppend();
        try {
            this.appendToFile(Config.getObjMinedTweetsFilePath(), text);
        } catch (PropertyKeyNotFoundException ex) {
            Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_objButtonActionPerformed

    private void tweetsListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tweetsListKeyPressed

        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_1) {

            String text = this.getTextToAppend();

            try {
                this.appendToFile(Config.getSubjMinedTweetsFilePath(), text);
            } catch (PropertyKeyNotFoundException ex) {
                Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_2) {

            String text = this.getTextToAppend();

            try {
                this.appendToFile(Config.getObjMinedTweetsFilePath(), text);
            } catch (PropertyKeyNotFoundException ex) {
                Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(SubjTweetMinerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tweetsListKeyPressed

    private String getTextToAppend(){        

        String text = this.tweetsList.getSelectedValue().toString();

        text = text.toLowerCase().replace(this.searchTermTextField.getText().toLowerCase(), " ");

        return text;
    }
    
    

    private void appendToFile (String filePath, String text) {

      BufferedWriter bw = null;

      try {
         bw = new BufferedWriter(new FileWriter(filePath, true));
	 bw.write(text);
	 bw.newLine();
	 bw.flush();
      } catch (IOException ioe) {
	 ioe.printStackTrace();
      } finally {
	 if (bw != null) try {
	    bw.close();
	 } catch (IOException ioe2) {
	 }
      }
   }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    } catch (ClassNotFoundException e) {
                        e.printStackTrace();
                    } catch (InstantiationException e) {
                        e.printStackTrace();
                    } catch (IllegalAccessException e) {
                        e.printStackTrace();
                    } catch (UnsupportedLookAndFeelException e) {
                        e.printStackTrace();
                    }
                new SubjTweetMinerJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton objButton;
    private javax.swing.JTextField searchTermTextField;
    private javax.swing.JButton subjButton;
    private javax.swing.JList tweetsList;
    // End of variables declaration//GEN-END:variables
        
}
